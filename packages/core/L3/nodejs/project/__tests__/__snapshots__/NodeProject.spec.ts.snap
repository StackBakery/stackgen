// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NodeProject creates a generic NodeJS project 1`] = `
{
  "author": {
    "email": "test@example.com",
    "name": "Test Example",
    "organization": true,
    "url": undefined,
  },
  "bin": undefined,
  "bugs": undefined,
  "bundledDependencies": [
    "@devPackage/latest",
  ],
  "dependencies": {
    "@package/latest": "*",
    "@package/version": "^1",
  },
  "description": "MyDescription",
  "devDependencies": {
    "@devPackage/latest": "*",
    "@devPackage/version": "^2",
    "@stackgen/cli": "*",
    "@stackgen/core": "*",
  },
  "files": [
    "build/*.js",
    "build/**/*.js",
  ],
  "homepath": undefined,
  "keywords": undefined,
  "main": "build/index.js",
  "man": undefined,
  "name": "my-project",
  "peerDependencies": {
    "@peerPackage/latest": "*",
    "@peerPackage/version": "^3",
  },
  "private": true,
  "repository": {
    "type": "git",
    "url": "http://localhost",
  },
  "resolutions": {
    "a": "b",
  },
  "scripts": {
    "test": "./myTestScript.sh",
  },
  "types": undefined,
  "version": "0.0.1",
}
`;

exports[`NodeProject creates a generic NodeJS project with Eslint 1`] = `
{
  "env": {
    "jest": false,
    "node": true,
  },
  "extends": [
    "plugin:import/recommended",
  ],
  "ignorePatterns": [
    "node_modules/",
    "*.generated.ts",
    "coverage",
  ],
  "overrides": [
    {
      "files": [
        ".stackgenrc.ts",
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off",
      },
    },
  ],
  "parser": undefined,
  "parserOptions": {
    "ecmaVersion": 2020,
  },
  "plugins": [],
  "root": true,
  "rules": {
    "array-bracket-newline": [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": [
      "error",
      "never",
    ],
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true,
      },
    ],
    "comma-dangle": [
      "error",
      "only-multiline",
    ],
    "comma-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "curly": [
      "error",
      "multi-line",
      "consistent",
    ],
    "dot-notation": [
      "error",
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/__tests__/**",
          "**/test/**",
        ],
        "optionalDependencies": false,
        "peerDependencies": true,
      },
    ],
    "import/no-unresolved": [
      "error",
    ],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": [
          "builtin",
          "external",
        ],
      },
    ],
    "key-spacing": [
      "error",
    ],
    "keyword-spacing": [
      "error",
    ],
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
      },
    ],
    "no-bitwise": [
      "error",
    ],
    "no-duplicate-imports": [
      "error",
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": false,
      },
    ],
    "no-multiple-empty-lines": [
      "error",
    ],
    "no-return-await": [
      "off",
    ],
    "no-shadow": [
      "off",
    ],
    "no-trailing-spaces": [
      "error",
    ],
    "object-curly-newline": [
      "error",
      {
        "consistent": true,
        "multiline": true,
      },
    ],
    "object-curly-spacing": [
      "error",
      "always",
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true,
      },
    ],
    "quote-props": [
      "error",
      "consistent-as-needed",
    ],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true,
      },
    ],
    "semi": [
      "error",
      "always",
    ],
    "space-before-blocks": [
      "error",
    ],
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": {
      "alias": {},
      "node": {
        "extensions": [
          ".js",
          ".jsx",
        ],
      },
      "typescript": undefined,
    },
  },
}
`;

exports[`NodeProject creates a generic NodeJS project with Eslint, Jest, and Typescript 1`] = `
{
  "clearMocks": true,
  "collectCoverage": true,
  "coverageDirectory": "coverage",
  "coveragePathIgnorePatterns": [
    "node_modules",
  ],
  "coverageReporters": [
    "json",
    "text",
  ],
  "globals": {
    "ts-jest": {
      "tsconfig": "tsconfig.json",
    },
  },
  "modulePathIgnorePatterns": [
    "node_modules",
  ],
  "preset": "ts-jest",
  "reporters": [
    "default",
    [
      "jest-junit",
      {
        "outputDirectory": "test-reports",
        "outputName": undefined,
      },
    ],
  ],
  "snapshotResolver": undefined,
  "testMatch": [
    "**/__tests__/?(*.)+(spec|test).[tj]s?(x)",
    "**/__tests__/**/?(*.)+(spec|test).[tj]s?(x)",
    "**/?(*.)+(spec|test).[tj]s?(x)",
  ],
  "testPathIgnorePatterns": [
    "node_modules",
  ],
  "watchPathIgnorePatterns": [
    "node_modules",
  ],
}
`;

exports[`NodeProject creates a generic NodeJS project with Eslint, Jest, and Typescript 2`] = `
{
  "env": {
    "jest": true,
    "node": true,
  },
  "extends": [
    "plugin:import/recommended",
    "plugin:import/typescript",
  ],
  "ignorePatterns": [
    "node_modules/",
    "*.generated.ts",
    "coverage",
    "*.js",
    "*.d.ts",
  ],
  "overrides": [
    {
      "files": [
        ".stackgenrc.ts",
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off",
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": [
    "@typescript-eslint",
  ],
  "root": true,
  "rules": {
    "@typescript-eslint/member-delimiter-style": [
      "error",
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method",
        ],
      },
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
    ],
    "@typescript-eslint/no-require-imports": [
      "error",
    ],
    "@typescript-eslint/no-shadow": [
      "error",
    ],
    "@typescript-eslint/return-await": [
      "error",
    ],
    "array-bracket-newline": [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": [
      "error",
      "never",
    ],
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true,
      },
    ],
    "comma-dangle": [
      "error",
      "only-multiline",
    ],
    "comma-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "curly": [
      "error",
      "multi-line",
      "consistent",
    ],
    "dot-notation": [
      "error",
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/__tests__/**",
          "**/test/**",
        ],
        "optionalDependencies": false,
        "peerDependencies": true,
      },
    ],
    "import/no-unresolved": [
      "error",
    ],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": [
          "builtin",
          "external",
        ],
      },
    ],
    "indent": [
      "off",
    ],
    "key-spacing": [
      "error",
    ],
    "keyword-spacing": [
      "error",
    ],
    "max-len": [
      "error",
      {
        "code": 80,
        "ignoreComments": true,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
      },
    ],
    "no-bitwise": [
      "error",
    ],
    "no-duplicate-imports": [
      "error",
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": false,
      },
    ],
    "no-multiple-empty-lines": [
      "error",
    ],
    "no-return-await": [
      "off",
    ],
    "no-shadow": [
      "off",
    ],
    "no-trailing-spaces": [
      "error",
    ],
    "object-curly-newline": [
      "error",
      {
        "consistent": true,
        "multiline": true,
      },
    ],
    "object-curly-spacing": [
      "error",
      "always",
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true,
      },
    ],
    "quote-props": [
      "error",
      "consistent-as-needed",
    ],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true,
      },
    ],
    "semi": [
      "error",
      "always",
    ],
    "space-before-blocks": [
      "error",
    ],
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": {
      "alias": {},
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
      "typescript": {
        "alwaysTryTypes": true,
        "project": "tsconfig.json",
      },
    },
  },
}
`;

exports[`NodeProject creates a generic NodeJS project with Eslint, Jest, and Typescript 3`] = `
{
  "compilerOptions": {
    "alwaysStrict": true,
    "declaration": true,
    "esModuleInterop": true,
    "experimentalDecorators": true,
    "inlineSourceMap": true,
    "inlineSources": true,
    "lib": [
      "esnext",
    ],
    "module": "commonjs",
    "noEmit": false,
    "noEmitOnError": false,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noUnusedLocals": true,
    "noUnusedParameters": false,
    "outDir": "build",
    "resolveJsonModule": true,
    "strict": true,
    "strictNullChecks": true,
    "strictPropertyInitialization": true,
    "stripInternal": true,
    "target": "ES6",
  },
  "exclude": [
    "node_modules",
  ],
  "include": [
    "src/*.ts",
    "src/**/*.ts",
  ],
}
`;

exports[`NodeProject creates a generic NodeJS project with Jest 1`] = `
{
  "clearMocks": true,
  "collectCoverage": true,
  "coverageDirectory": "coverage",
  "coveragePathIgnorePatterns": [
    "node_modules",
  ],
  "coverageReporters": [
    "json",
    "text",
  ],
  "modulePathIgnorePatterns": [
    "node_modules",
  ],
  "reporters": [
    "default",
    [
      "jest-junit",
      {
        "outputDirectory": "test-reports",
        "outputName": undefined,
      },
    ],
  ],
  "snapshotResolver": undefined,
  "testMatch": [
    "**/__tests__/?(*.)+(spec|test).[tj]s?(x)",
    "**/__tests__/**/?(*.)+(spec|test).[tj]s?(x)",
    "**/?(*.)+(spec|test).[tj]s?(x)",
  ],
  "testPathIgnorePatterns": [
    "node_modules",
  ],
  "watchPathIgnorePatterns": [
    "node_modules",
  ],
}
`;

exports[`NodeProject creates a generic NodeJS project with Typescript 1`] = `
{
  "compilerOptions": {
    "alwaysStrict": true,
    "declaration": true,
    "esModuleInterop": true,
    "experimentalDecorators": true,
    "inlineSourceMap": true,
    "inlineSources": true,
    "lib": [
      "esnext",
    ],
    "module": "commonjs",
    "noEmit": false,
    "noEmitOnError": false,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noUnusedLocals": true,
    "noUnusedParameters": false,
    "outDir": "build",
    "resolveJsonModule": true,
    "strict": true,
    "strictNullChecks": true,
    "strictPropertyInitialization": true,
    "stripInternal": true,
    "target": "ES6",
  },
  "exclude": [
    "node_modules",
  ],
  "include": [
    "src/*.ts",
    "src/**/*.ts",
  ],
}
`;

exports[`NodeProject creates a generic NodeJS project with Yalc 1`] = `
{
  "bin": undefined,
  "bugs": undefined,
  "description": "MyDescription",
  "devDependencies": {
    "@stackgen/cli": "*",
    "@stackgen/core": "*",
  },
  "files": [
    "build/*.js",
    "build/**/*.js",
  ],
  "homepath": undefined,
  "keywords": undefined,
  "main": "build/index.js",
  "man": undefined,
  "name": "my-project",
  "private": true,
  "repository": {
    "type": "git",
    "url": "http://localhost",
  },
  "resolutions": {
    "a": "b",
  },
  "scripts": {
    "yalc": "npx yalc publish",
  },
  "types": undefined,
  "version": "0.0.1",
}
`;

exports[`NodeProject creates a generic NodeJS project with a license 1`] = `
{
  "bin": undefined,
  "bugs": undefined,
  "description": "MyDescription",
  "devDependencies": {
    "@stackgen/cli": "*",
    "@stackgen/core": "*",
  },
  "files": [
    "build/*.js",
    "build/**/*.js",
  ],
  "homepath": undefined,
  "keywords": undefined,
  "license": "Apache-2.0",
  "main": "build/index.js",
  "man": undefined,
  "name": "my-project",
  "private": true,
  "repository": {
    "type": "git",
    "url": "http://localhost",
  },
  "resolutions": {
    "a": "b",
  },
  "scripts": {
    "yalc": "npx yalc publish",
  },
  "types": undefined,
  "version": "0.0.1",
}
`;

exports[`NodeProject creates a generic NodeJS project with overloaded packageName 1`] = `
{
  "bin": undefined,
  "bugs": undefined,
  "description": "MyDescription",
  "devDependencies": {
    "@stackgen/cli": "*",
    "@stackgen/core": "*",
  },
  "files": [
    "build/*.js",
    "build/**/*.js",
  ],
  "homepath": undefined,
  "keywords": undefined,
  "main": "build/index.js",
  "man": undefined,
  "name": "@example/test",
  "private": true,
  "repository": {
    "type": "git",
    "url": "http://localhost",
  },
  "resolutions": {
    "a": "b",
  },
  "scripts": {
    "yalc": "npx yalc publish",
  },
  "types": undefined,
  "version": "0.0.1",
}
`;
